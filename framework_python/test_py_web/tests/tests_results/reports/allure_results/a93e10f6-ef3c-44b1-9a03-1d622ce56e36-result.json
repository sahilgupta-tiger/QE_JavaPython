{"name": "TC_003_Validation of executive summary", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "self = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000025F07B33F10>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n>                   raise ValueError(f\"The path is not a valid file: {path}\")\nE                   ValueError: The path is not a valid file: D:\\My_Workspaces\\GitHub\\QE_JavaPython\\commonutils\\drivers\\chromedriver\\chromedriver.exe\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:64: ValueError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'driver' for <Function test_report_tc3>>\n\n    @pytest.fixture(autouse=True)\n    def driver(request):\n        global driver\n        if browser == \"chrome\":\n            chrome_options = Options()\n            chrome_options.add_argument(\"--incognito\")\n            chrome_options.add_argument(\"--start-maximized\")\n>           driver = webdriver.Chrome(options=chrome_options, service=Service(executable_path=chrome_loc))\n\ntests\\test_cases\\test_bdd_scenarios.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:45: in __init__\n    super().__init__(\nvenv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:50: in __init__\n    if finder.get_browser_path():\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:47: in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.driver_finder.DriverFinder object at 0x0000025F07B33F10>\n\n    def _binary_paths(self) -> dict:\n        if self._paths[\"driver_path\"]:\n            return self._paths\n    \n        browser = self._options.capabilities[\"browserName\"]\n        try:\n            path = self._service.path\n            if path:\n                logger.debug(\n                    \"Skipping Selenium Manager; path to %s driver specified in Service class: %s\", browser, path\n                )\n                if not Path(path).is_file():\n                    raise ValueError(f\"The path is not a valid file: {path}\")\n                self._paths[\"driver_path\"] = path\n            else:\n                output = SeleniumManager().binary_paths(self._to_args())\n                if Path(output[\"driver_path\"]).is_file():\n                    self._paths[\"driver_path\"] = output[\"driver_path\"]\n                else:\n                    raise ValueError(f'The driver path is not a valid file: {output[\"driver_path\"]}')\n                if Path(output[\"browser_path\"]).is_file():\n                    self._paths[\"browser_path\"] = output[\"browser_path\"]\n                else:\n                    raise ValueError(f'The browser path is not a valid file: {output[\"browser_path\"]}')\n        except Exception as err:\n            msg = f\"Unable to obtain driver for {browser}\"\n>           raise NoSuchDriverException(msg) from err\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain driver for chrome; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:78: NoSuchDriverException"}, "description": "D:\\Project\\QE_JavaPython\\framework_python\\test_py_web\\tests\\test_cases\\..\\features\\power_bi_dashboard.feature: TC_003_Validation of executive summary", "start": 1723437888099, "stop": 1723437888099, "uuid": "bd910c63-075a-4afd-b6c6-990b5617fa60", "historyId": "a30f358895cde7687d435585e62b12cd", "testCaseId": "a30f358895cde7687d435585e62b12cd", "fullName": "tests.test_cases.test_bdd_scenarios#test_report_tc3", "labels": [{"name": "feature", "value": "Validate Grid Details and Drill Through"}, {"name": "severity", "value": "normal"}, {"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "parentSuite", "value": "tests.test_cases"}, {"name": "suite", "value": "test_bdd_scenarios"}, {"name": "host", "value": "TIGER04836"}, {"name": "thread", "value": "22900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cases.test_bdd_scenarios"}]}